package com.githubrepos.data.datasource.api.dto

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

@Serializable
data class ERepository(
    @SerialName("stargazers_count") val stargazersCount: Int? = null,
    @SerialName("pushed_at") val pushedAt: String? = null,
    @SerialName("subscription_url") val subscriptionUrl: String? = null,
    val language: String? = null,
    @SerialName("branches_url") val branchesUrl: String? = null,
    @SerialName("issue_comment_url") val issueCommentUrl: String? = null,
    @SerialName("labels_url") val labelsUrl: String? = null,
    @SerialName("subscribers_url") val subscribersUrl: String? = null,
    @SerialName("releases_url") val releasesUrl: String? = null,
    @SerialName("svn_url") val svnUrl: String? = null,
    val id: Int? = null,
    val forks: Int? = null,
    @SerialName("archive_url") val archiveUrl: String? = null,
    @SerialName("git_refs_url") val gitRefsUrl: String? = null,
    @SerialName("forks_url") val forksUrl: String? = null,
    @SerialName("statuses_url") val statusesUrl: String? = null,
    @SerialName("ssh_url") val sshUrl: String? = null,
    @SerialName("full_name") val fullName: String? = null,
    val size: Int? = null,
    @SerialName("languages_url") val languagesUrl: String? = null,
    @SerialName("html_url") val htmlUrl: String? = null,
    @SerialName("collaborators_url") val collaboratorsUrl: String? = null,
    @SerialName("clone_url") val cloneUrl: String? = null,
    val name: String? = null,
    @SerialName("pulls_url") val pullsUrl: String? = null,
    @SerialName("default_branch") val defaultBranch: String? = null,
    @SerialName("hooks_url") val hooksUrl: String? = null,
    @SerialName("trees_url") val treesUrl: String? = null,
    @SerialName("tags_url") val tagsUrl: String? = null,
    val private: Boolean? = null,
    @SerialName("contributors_url") val contributorsUrl: String? = null,
    @SerialName("has_downloads") val hasDownloads: Boolean? = null,
    @SerialName("notifications_url") val notificationsUrl: String? = null,
    @SerialName("open_issues_count") val openIssuesCount: Int? = null,
    val description: String? = null,
    @SerialName("created_at") val createdAt: String? = null,
    val watchers: Int? = null,
    @SerialName("keys_url") val keysUrl: String? = null,
    @SerialName("deployments_url") val deploymentsUrl: String? = null,
    @SerialName("has_projects") val hasProjects: Boolean? = null,
    val archived: Boolean? = null,
    @SerialName("has_wiki") val hasWiki: Boolean? = null,
    @SerialName("updated_at") val updatedAt: String? = null,
    @SerialName("comments_url") val commentsUrl: String? = null,
    @SerialName("stargazers_url") val stargazersUrl: String? = null,
    @SerialName("git_url") val gitUrl: String? = null,
    @SerialName("has_pages") val hasPages: Boolean? = null,
    @SerialName("commits_url") val commitsUrl: String? = null,
    @SerialName("compare_url") val compareUrl: String? = null,
    @SerialName("git_commits_url") val gitCommitsUrl: String? = null,
    @SerialName("blobs_url") val blobsUrl: String? = null,
    @SerialName("git_tags_url") val gitTagsUrl: String? = null,
    @SerialName("merges_url") val mergesUrl: String? = null,
    @SerialName("downloads_url") val downloadsUrl: String? = null,
    @SerialName("has_issues") val hasIssues: Boolean? = null,
    val url: String? = null,
    @SerialName("contents_url") val contentsUrl: String? = null,
    @SerialName("mirror_url") val mirrorUrl: String? = null,
    @SerialName("milestones_url") val milestonesUrl: String? = null,
    @SerialName("teams_url") val teamsUrl: String? = null,
    val fork: Boolean? = null,
    @SerialName("issues_url") val issuesUrl: String? = null,
    @SerialName("events_url") val eventsUrl: String? = null,
    @SerialName("issue_events_url") val issueEventsUrl: String? = null,
    @SerialName("assignees_url") val assigneesUrl: String? = null,
    @SerialName("open_issues") val openIssues: Int? = null,
    @SerialName("watchers_count") val watchersCount: Int? = null,
    val homepage: String? = null,
    @SerialName("forks_count") val forksCount: Int? = null
)